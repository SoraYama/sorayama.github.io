webpackJsonp([0xc926f504233c],{525:function(e,n,t){"use strict";var r=function(e,n){return Object.defineProperty?Object.defineProperty(e,"raw",{value:n}):e.raw=n,e},a=Object.assign||function(e){for(var n,t=1,r=arguments.length;t<r;t++){n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},l=function(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)Object.hasOwnProperty.call(e,t)&&(n[t]=e[t]);return n.default=e,n},i=function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(n,"__esModule",{value:!0});var o=l(t(2)),s=i(t(62)),m=t(70),d=t(23),u=i(t(121));n.default=function(e){var n=e.data.post,t=n.frontmatter,r=n.html,l=n.timeToRead,i=t.author.avatar.children[0],c=e.data.post.frontmatter.tags.map(function(e){return o.createElement(d.Label,{key:e},o.createElement(s.default,{to:"/blog/tags/"+e+"/"},e))}),g=e.data.recents?e.data.recents.edges.map(function(e){var n=e.node,t=n.frontmatter.author.avatar.children[0],r=m.get(n,"frontmatter.image.children.0.responsiveResolution",{}),a=o.createElement(d.Comment.Group,null,o.createElement(d.Comment,null,o.createElement(d.Comment.Avatar,{src:t.responsiveResolution.src,srcSet:t.responsiveResolution.srcSet}),o.createElement(d.Comment.Content,null,o.createElement(d.Comment.Author,{style:{fontWeight:400}},n.frontmatter.author.id),o.createElement(d.Comment.Metadata,{style:{margin:0}},n.timeToRead," min read"))));return o.createElement("div",{key:n.fields.slug,style:{paddingBottom:"1em"}},o.createElement(d.Card,{as:s.default,to:n.fields.slug,image:r,header:n.frontmatter.title,extra:a}))}):"",h=m.get(t,"image.children.0.responsiveResolution",{});return o.createElement(d.Container,null,o.createElement(u.default,null),o.createElement(d.Segment,{vertical:!0,style:{border:"none"}},o.createElement(d.Item.Group,null,o.createElement(d.Item,null,o.createElement(d.Item.Image,{size:"tiny",shape:"circular",src:i.responsiveResolution.src,srcSet:i.responsiveResolution.srcSet}),o.createElement(d.Item.Content,null,o.createElement(d.Item.Description,null,t.author.id),o.createElement(d.Item.Meta,null,t.author.bio),o.createElement(d.Item.Extra,null,"更新于 ",t.updatedDate," - 差不多要花 ",l," 分钟阅读")))),o.createElement(d.Header,{as:"h1"},t.title)),o.createElement(d.Image,a({},h,{fluid:!0})),o.createElement(d.Segment,{vertical:!0,style:{border:"none"},dangerouslySetInnerHTML:{__html:r}}),o.createElement(d.Segment,{vertical:!0},"标签们：",c),o.createElement(d.Segment,{vertical:!0},o.createElement(d.Grid,{padded:!0,centered:!0},g)))},n.pageQuery=graphql(c||(c=r(['\n  query TemplateBlogPost($slug: String!) {\n  site: site {\n    siteMetadata {\n        disqus\n    }\n  }\n  post: markdownRemark(fields: {slug: {eq: $slug}}) {\n    html\n    excerpt\n    timeToRead\n    fields {\n      slug\n    }\n    frontmatter {\n      tags\n      author {\n        id\n        bio\n        twitter\n        avatar {\n          children {\n            ... on ImageSharp {\n              responsiveResolution(width: 80, height: 80, quality: 100) {\n                src\n                srcSet\n              }\n            }\n          }\n        }\n      }\n      title\n      updatedDate(formatString: "MMM D, YYYY")\n      image {\n        children {\n          ... on ImageSharp {\n            responsiveResolution(width: 900, height: 300, quality: 100) {\n              src\n              srcSet\n            }\n          }\n        }\n      }\n    }\n  }\n  recents: allMarkdownRemark(\n    filter: {\n      fields: {slug: {ne: $slug}}\n      frontmatter: {draft: {ne: true}},\n      fileAbsolutePath: {regex: "/blog/"},\n    },\n    sort: {order: DESC, fields: [frontmatter___updatedDate]},\n    limit: 4\n  ) {\n    edges {\n      node {\n        fields {\n          slug\n        }\n        timeToRead\n        frontmatter {\n          title\n          image {\n            children {\n              ... on ImageSharp {\n                responsiveResolution(width: 300, height: 100) {\n                  src\n                  srcSet\n                }\n              }\n            }\n          }\n          author {\n            id\n            avatar {\n              children {\n                ... on ImageSharp {\n                  responsiveResolution(width: 36, height: 36) {\n                    src\n                    srcSet\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n'],['\n  query TemplateBlogPost($slug: String!) {\n  site: site {\n    siteMetadata {\n        disqus\n    }\n  }\n  post: markdownRemark(fields: {slug: {eq: $slug}}) {\n    html\n    excerpt\n    timeToRead\n    fields {\n      slug\n    }\n    frontmatter {\n      tags\n      author {\n        id\n        bio\n        twitter\n        avatar {\n          children {\n            ... on ImageSharp {\n              responsiveResolution(width: 80, height: 80, quality: 100) {\n                src\n                srcSet\n              }\n            }\n          }\n        }\n      }\n      title\n      updatedDate(formatString: "MMM D, YYYY")\n      image {\n        children {\n          ... on ImageSharp {\n            responsiveResolution(width: 900, height: 300, quality: 100) {\n              src\n              srcSet\n            }\n          }\n        }\n      }\n    }\n  }\n  recents: allMarkdownRemark(\n    filter: {\n      fields: {slug: {ne: $slug}}\n      frontmatter: {draft: {ne: true}},\n      fileAbsolutePath: {regex: "/blog/"},\n    },\n    sort: {order: DESC, fields: [frontmatter___updatedDate]},\n    limit: 4\n  ) {\n    edges {\n      node {\n        fields {\n          slug\n        }\n        timeToRead\n        frontmatter {\n          title\n          image {\n            children {\n              ... on ImageSharp {\n                responsiveResolution(width: 300, height: 100) {\n                  src\n                  srcSet\n                }\n              }\n            }\n          }\n          author {\n            id\n            avatar {\n              children {\n                ... on ImageSharp {\n                  responsiveResolution(width: 36, height: 36) {\n                    src\n                    srcSet\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n'])));var c}});
//# sourceMappingURL=component---src-templates-blog-post-tsx-527430af423055041555.js.map