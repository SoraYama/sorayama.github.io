{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/blog/2020-08-12-pixel3用charles抓包以及root/","result":{"data":{"site":{"siteMetadata":{"disqus":"sorayama"}},"post":{"html":"<h1 id=\"pixel-3-charles-抓包以及-root-记录\"><a href=\"#pixel-3-charles-%E6%8A%93%E5%8C%85%E4%BB%A5%E5%8F%8A-root-%E8%AE%B0%E5%BD%95\" aria-label=\"pixel 3 charles 抓包以及 root 记录 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pixel 3 charles 抓包以及 root 记录</h1>\n<blockquote>\n<p>之前就因为 pixel 3 因为用户安装的 https 证书不被认可，不能抓包费心费力，为了使手里的 pixel 3 可以正常抓包，花了两天时间来研究，现记录如下。</p>\n</blockquote>\n<h2 id=\"charles-ca-证书制作\"><a href=\"#charles-ca-%E8%AF%81%E4%B9%A6%E5%88%B6%E4%BD%9C\" aria-label=\"charles ca 证书制作 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>charles CA 证书制作</h2>\n<ol>\n<li>确定文件名（根据机型这里两种 hash 都需要）</li>\n</ol>\n<p><code class=\"language-text\">Charles - Help - SSL Proxying - save Charles root certificate</code> 保存证书到本地，文件名大概为 <code class=\"language-text\">charles-ssl-proxying-certificate.pem</code>, 然后 terminal 中</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">openssl x509 -inform PEM -subject_hash_old -in charles-ssl-proxying-certificate.pem <span class=\"token operator\">|</span> <span class=\"token function\">head</span> -1 <span class=\"token comment\"># aaaaaaaa</span>\nopenssl x509 -inform PEM -subject_hash -in charles-ssl-proxying-certificate.pem <span class=\"token operator\">|</span> <span class=\"token function\">head</span> -1 <span class=\"token comment\"># bbbbbbbb</span></code></pre></div>\n<p>拿到的两个文件的名字 + <code class=\"language-text\">&#39;.0&#39;</code> 作为新的文件的名字。</p>\n<ol start=\"2\">\n<li>转换证书格式</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">openssl x509 -inform PEM -text -in charles-ssl-proxying-certificate.pem <span class=\"token operator\">></span> aaaaaaaa.0\nopenssl x509 -inform PEM -text -in charles-ssl-proxying-certificate.pem <span class=\"token operator\">></span> bbbbbbbb.0</code></pre></div>\n<ol start=\"3\">\n<li><strong>编辑</strong>输出的文件，把 <code class=\"language-text\">-----BEGIN CERTIFICATE-----</code> 到文件结束这部分移动到文件首部</li>\n</ol>\n<h2 id=\"手机-root\"><a href=\"#%E6%89%8B%E6%9C%BA-root\" aria-label=\"手机 root permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>手机 root</h2>\n<p>这部分虽然过程曲折，但最终还是用 magisk 搞定了 root，这里大概记录下过程。</p>\n<ol start=\"0\">\n<li>各种准备</li>\n<li>原厂底包</li>\n<li><code class=\"language-text\">Android</code> 官方的 <code class=\"language-text\">platform-tools</code> (Mac 的话则只需要执行 <code class=\"language-text\">brew cask install android-platform-tools</code>)</li>\n<li><a href=\"https://github.com/topjohnwu/Magisk/releases\"><code class=\"language-text\">Magisk</code></a> (主要是 <code class=\"language-text\">Magisk Manager</code> apk)</li>\n<li>解锁 <code class=\"language-text\">OEM</code> 和 <code class=\"language-text\">BootLoader</code>， 可参考 <a href=\"https://sspai.com/post/38319\">这篇帖子</a></li>\n<li>TWRP 尝试</li>\n</ol>\n<p>一开始看到有 <a href=\"https://www.itfanr.cc/2018/10/16/google-pixel-unlock-bl-and-root/\">帖子</a> 说用 <code class=\"language-text\">twrp</code> 来刷机，在 <code class=\"language-text\">twrp</code> 官网下载完 <code class=\"language-text\">3.3.0</code> 的 <code class=\"language-text\">installer</code> 之后来用 <code class=\"language-text\">fastboot</code> 刷，奈何萌新没有经验导致翻车，主要是在</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">fastboot boot twrp.img</code></pre></div>\n<p>这一步报错，原因显示为</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">usb_read failed with status e00002ed ERROR</code></pre></div>\n<p>查阅很多资料有说 USB 线不好用或者是 U 口有问题等等，经换线、换电脑、换操作系统的排查发现均不是以上问题。后怀疑应该是刷机包本身有问题或者版本不匹配造成。在一番手贱之后（比如把这个包 flash boot）终于机子变砖了。</p>\n<ol start=\"2\">\n<li>刷 <code class=\"language-text\">boot.img</code></li>\n</ol>\n<p>变砖之后查询了一些办法之后发现可以下载 <a href=\"https://developers.google.cn/android/images#blueline\">官方底包</a> 之后解压两层得到一个 <code class=\"language-text\">boot.img</code> 的镜像，这个就是用来刷 boot stock 的包。尝试一番，用 <code class=\"language-text\">fastboot</code> 刷进去</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">fastboot flash boot boot.img</code></pre></div>\n<p>开机，能进入系统。</p>\n<ol start=\"3\">\n<li>Magisk 刷机（可参考 <a href=\"http://bbs.gfan.com/android-9608088-1-1.html\">这里</a> ）</li>\n<li>将 Magisk Manager 下载到手机上</li>\n<li>将之前下载的 <code class=\"language-text\">boot.img</code> 传到手机上自定义位置</li>\n<li>\n<p>打开 Magisk Manager，下载最新版 Magisk（选择修复一个文件选项，然后选择 <code class=\"language-text\">boot.img</code>）</p>\n<blockquote>\n<p>注意如果一直检查更新的话则需要翻墙</p>\n</blockquote>\n</li>\n<li>下载完之后会搞一个 <code class=\"language-text\">magisk_patched.img</code> 的镜像到 <code class=\"language-text\">download</code> 里，将它拉倒电脑上</li>\n<li>在电脑上执行</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">adb reboot-bootloader\n\nfastboot flash boot magisk_patched.img</code></pre></div>\n<p>开机，终于不是黑屏了。然而更悲惨的是触控全部失灵 = = 在查询各种网站之后发现不仅我一个人有困惑，比如教程后的评论中同样有人遭遇此境况。然而 <code class=\"language-text\">xda</code> 等地方没有查到更多关于刷机导致触屏失灵的情况，所以判断还是需要从固件入手，我整个恢复原厂设置就好了吧（</p>\n<ol start=\"4\">\n<li>恢复原厂固件</li>\n</ol>\n<p>由于不能够点击屏幕，在查阅一番之后发现用原厂固件包中的脚本就可以轻松恢复了：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 先 cd 进入固件包</span>\n<span class=\"token comment\"># Windows 直接点击 flash-all.bat MacOS / Linux</span>\n\n./flash-all.sh</code></pre></div>\n<ol start=\"5\">\n<li>重新刷机</li>\n</ol>\n<p>同第 3 步，搞完之后就发现 <code class=\"language-text\">root</code> 成功了</p>\n<h2 id=\"导入证书到系统中\"><a href=\"#%E5%AF%BC%E5%85%A5%E8%AF%81%E4%B9%A6%E5%88%B0%E7%B3%BB%E7%BB%9F%E4%B8%AD\" aria-label=\"导入证书到系统中 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>导入证书到系统中</h2>\n<p>在查阅 <a href=\"https://segmentfault.com/a/1190000017035564\">这个帖子</a> 的时候发现往 <code class=\"language-text\">/system</code> 中写入东西的时候会报错</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mv: /system/etc/security/cacerts/xxxxxxxx.0: Read-only file system</code></pre></div>\n<p>根据教程是需要挂载 <code class=\"language-text\">/system</code>，使用</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">mount</span> -o rw,remount /\n\n<span class=\"token comment\"># OR</span>\n\n<span class=\"token function\">mount</span> -o rw,remount /system</code></pre></div>\n<p>然而都会有报错</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mount: &#39;/system&#39; not in /proc/mounts</code></pre></div>\n<p>后来又看到帖子说需要执行</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">adb root\n\nadb disable-verity</code></pre></div>\n<p>然而会报错</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">verity cannot be disabled/enabled - USER build</code></pre></div>\n<p>虽然在 <a href=\"https://android.stackexchange.com/questions/215800/how-to-disable-dm-verity-on-android-with-user-build-type-rom\">这篇帖子</a> 中看到了很多办法（比如不勾选 Magisk 里面 <code class=\"language-text\">Preserve AVB v2.0/dm-verity</code> 重新新装）都无济于事。\n在求助 Rikka 之后说 都 0202 年了直接写 <code class=\"language-text\">/system</code> 不太行，因此要用 Magisk 的模块装进去。大概的目录如下</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">charles_ca\n├── META-INF\n│   └── com\n│       └── google\n│           └── android\n│               ├── update-binary\n│               └── updater-script\n├── module.prop\n└── system\n    └── etc\n        └── security\n            └── cacerts\n                ├── aaaaaaaa.0\n                └── bbbbbbbb.0</code></pre></div>\n<p>其中 <code class=\"language-text\">update-binary</code> 和 <code class=\"language-text\">updater-script</code> 的写法可参考 <a href=\"https://topjohnwu.github.io/Magisk/guides.html#magisk-module-installer\">Magisk Module Installer</a></p>\n<p>然后打包（记得检查一下打包完 <code class=\"language-text\">.zip</code> 的层级）好之后推到设备上，用 Magisk 安装模块就大功告成了。</p>","excerpt":"Pixel 3 charles 抓包以及 root 记录 之前就因为 pixel 3 因为用户安装的 https 证书不被认可，不能抓包费心费力，为了使手里的 pixel 3 可以正常抓包，花了两天时间来研究，现记录如下。 charles CA…","timeToRead":6,"fields":{"slug":"/blog/2020-08-12-pixel3用charles抓包以及root/"},"frontmatter":{"tags":["2020-08","root","android","charles"],"author":{"id":"SoraYama - 空山","bio":"折腾点前端和其他","twitter":"@ClassicSilence1","avatar":{"children":[{"__typename":"ImageSharp","fixed":{"src":"/static/d7657fc7ec759cfa220ac058ed0b571a/7ca4f/avatar.jpg","srcSet":"/static/d7657fc7ec759cfa220ac058ed0b571a/7ca4f/avatar.jpg 1x,\n/static/d7657fc7ec759cfa220ac058ed0b571a/236eb/avatar.jpg 1.5x,\n/static/d7657fc7ec759cfa220ac058ed0b571a/30e6d/avatar.jpg 2x"}}]}},"title":"Pixel 3 charles 抓包以及 root 记录","updatedDate":"Aug 12, 2020","image":{"children":[{"__typename":"ImageSharp","fixed":{"src":"/static/f9b54ac624d823fa3d1a87da629f034b/887a2/pixel3.jpg","srcSet":"/static/f9b54ac624d823fa3d1a87da629f034b/887a2/pixel3.jpg 1x"}}]}}},"recents":{"edges":[{"node":{"fields":{"slug":"/blog/2019-10-16--使用阿里云OSS+Docker搭建Nextcloud/"},"timeToRead":12,"frontmatter":{"title":"使用阿里云OSS+Docker搭建Nextcloud","updatedDate":"2019-11-06","image":{"children":[{"__typename":"ImageSharp","fixed":{"src":"/static/1bb99f288b731ba8e714fc91933b88eb/37089/nextcloud.jpg","srcSet":"/static/1bb99f288b731ba8e714fc91933b88eb/37089/nextcloud.jpg 1x,\n/static/1bb99f288b731ba8e714fc91933b88eb/4a855/nextcloud.jpg 1.5x,\n/static/1bb99f288b731ba8e714fc91933b88eb/92aae/nextcloud.jpg 2x"}}]},"author":{"avatar":{"children":[{"__typename":"ImageSharp","fixed":{"src":"/static/d7657fc7ec759cfa220ac058ed0b571a/29d9a/avatar.jpg","srcSet":"/static/d7657fc7ec759cfa220ac058ed0b571a/29d9a/avatar.jpg 1x,\n/static/d7657fc7ec759cfa220ac058ed0b571a/1a035/avatar.jpg 1.5x,\n/static/d7657fc7ec759cfa220ac058ed0b571a/74d54/avatar.jpg 2x"}}]}}}}},{"node":{"fields":{"slug":"/blog/2018-07-29--misc/"},"timeToRead":4,"frontmatter":{"title":"Misc","updatedDate":"2019-10-23","image":{"children":[{"__typename":"ImageSharp","fixed":{"src":"/static/98bc53d2012296d56b37cad2ff328b5a/37089/cup-of-coffee-laptop-office-macbook-89786.jpg","srcSet":"/static/98bc53d2012296d56b37cad2ff328b5a/37089/cup-of-coffee-laptop-office-macbook-89786.jpg 1x,\n/static/98bc53d2012296d56b37cad2ff328b5a/4a855/cup-of-coffee-laptop-office-macbook-89786.jpg 1.5x,\n/static/98bc53d2012296d56b37cad2ff328b5a/92aae/cup-of-coffee-laptop-office-macbook-89786.jpg 2x"}}]},"author":{"avatar":{"children":[{"__typename":"ImageSharp","fixed":{"src":"/static/d7657fc7ec759cfa220ac058ed0b571a/29d9a/avatar.jpg","srcSet":"/static/d7657fc7ec759cfa220ac058ed0b571a/29d9a/avatar.jpg 1x,\n/static/d7657fc7ec759cfa220ac058ed0b571a/1a035/avatar.jpg 1.5x,\n/static/d7657fc7ec759cfa220ac058ed0b571a/74d54/avatar.jpg 2x"}}]}}}}},{"node":{"fields":{"slug":"/blog/2019-10-08--ShadowSocks的种种/"},"timeToRead":7,"frontmatter":{"title":"ShadowSocks的种种","updatedDate":"2019-10-08","image":{"children":[{"__typename":"ImageSharp","fixed":{"src":"/static/1ce0d1cd7e1d0637a29faca7d03ee87a/37089/shadowsocks.jpg","srcSet":"/static/1ce0d1cd7e1d0637a29faca7d03ee87a/37089/shadowsocks.jpg 1x,\n/static/1ce0d1cd7e1d0637a29faca7d03ee87a/4a855/shadowsocks.jpg 1.5x,\n/static/1ce0d1cd7e1d0637a29faca7d03ee87a/92aae/shadowsocks.jpg 2x"}}]},"author":{"avatar":{"children":[{"__typename":"ImageSharp","fixed":{"src":"/static/d7657fc7ec759cfa220ac058ed0b571a/29d9a/avatar.jpg","srcSet":"/static/d7657fc7ec759cfa220ac058ed0b571a/29d9a/avatar.jpg 1x,\n/static/d7657fc7ec759cfa220ac058ed0b571a/1a035/avatar.jpg 1.5x,\n/static/d7657fc7ec759cfa220ac058ed0b571a/74d54/avatar.jpg 2x"}}]}}}}},{"node":{"fields":{"slug":"/blog/2019-07-03--前端面试汇总/"},"timeToRead":28,"frontmatter":{"title":"前端面试汇总(持续更新)","updatedDate":"2019-07-28","image":{"children":[{"__typename":"ImageSharp","fixed":{"src":"/static/509f7cfdd1a14bf357f75a03cde10624/37089/fe.jpg","srcSet":"/static/509f7cfdd1a14bf357f75a03cde10624/37089/fe.jpg 1x,\n/static/509f7cfdd1a14bf357f75a03cde10624/4a855/fe.jpg 1.5x,\n/static/509f7cfdd1a14bf357f75a03cde10624/92aae/fe.jpg 2x"}}]},"author":{"avatar":{"children":[{"__typename":"ImageSharp","fixed":{"src":"/static/d7657fc7ec759cfa220ac058ed0b571a/29d9a/avatar.jpg","srcSet":"/static/d7657fc7ec759cfa220ac058ed0b571a/29d9a/avatar.jpg 1x,\n/static/d7657fc7ec759cfa220ac058ed0b571a/1a035/avatar.jpg 1.5x,\n/static/d7657fc7ec759cfa220ac058ed0b571a/74d54/avatar.jpg 2x"}}]}}}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/blog/2020-08-12-pixel3用charles抓包以及root/"}}}