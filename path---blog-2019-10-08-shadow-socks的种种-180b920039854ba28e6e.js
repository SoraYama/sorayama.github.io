webpackJsonp([0x5e37752868ef],{692:function(a,e){a.exports={data:{site:{siteMetadata:{disqus:"sorayama"}},post:{html:'<h2 id="前言"><a href="#%E5%89%8D%E8%A8%80" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>前言</h2>\n<p>ShadowSocks 作为科学上网工具对于我来说基本是日常生活工作的必备，此篇作为基本科普和备忘大概记录下搭建和使用中的一些坑</p>\n<h2 id="客户端"><a href="#%E5%AE%A2%E6%88%B7%E7%AB%AF" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>客户端</h2>\n<ul>\n<li><a href="https://github.com/shadowsocks/ShadowsocksX-NG">Mac 端</a></li>\n<li><a href="https://github.com/shadowsocks/shadowsocks-windows">Win 端</a></li>\n<li><a href="https://github.com/shadowsocks/shadowsocks-android">Android 端</a></li>\n<li><a href="https://apps.apple.com/jp/app/shadowrocket/id932747118">iOS 端</a> （需要外区 Apple ID，虽然收 20 块但是比较值毕竟一直在更新维护）</li>\n</ul>\n<p>设置的话大同小异就不再赘述了</p>\n<h2 id="服务端部署"><a href="#%E6%9C%8D%E5%8A%A1%E7%AB%AF%E9%83%A8%E7%BD%B2" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>服务端部署</h2>\n<p>在服务端有两种部署方式，可以按照自己需要来部署，一般会改默认的密码和端口，加密方式一般选择 <code class="language-text">xchacha20-ietf-poly1305</code></p>\n<h3 id="脚本部署"><a href="#%E8%84%9A%E6%9C%AC%E9%83%A8%E7%BD%B2" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>脚本部署</h3>\n<blockquote>\n<p><a href="https://github.com/teddysun/shadowsocks_install/tree/master">脚本 Github Repo</a></p>\n</blockquote>\n<p>这个<a href="https://teddysun.com/">脚本作者</a>虽然表示已经<a href="https://shadowsocks.be/">被迫弃坑</a>，但是其 Github 上的主分支依然存在，因此并不影响脚本使用只是不再更新</p>\n<p>常用的版本为 python 版，支持 CentOS，Debian 和 Ubuntu，直接上脚本</p>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash"><span class="token function">wget</span> –no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks\\_install/master/shadowsocks.sh\n\n<span class="token function">chmod</span> +x shadowsocks.sh\n\n./shadowsocks.sh 2<span class="token operator">></span><span class="token operator">&amp;</span>1 <span class="token operator">|</span> <span class="token function">tee</span> shadowsocks.log</code></pre>\n      </div>\n<p>如安装 <code class="language-text">libev</code> 或者是 <code class="language-text">shadowsocksR</code> 版本只需替换文件名到该 Repo 下其他脚本文件即可，注意支持的系统版本</p>\n<h3 id="docker-部署"><a href="#docker-%E9%83%A8%E7%BD%B2" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Docker 部署</h3>\n<p>在 <a href="https://github.com/teddysun/shadowsocks_install/tree/master/docker/shadowsocks-libev">Teddysun 的 repo</a> 里同样是有 Dockerfile 部署文件，但是由于作者表示弃坑所以改用 <code class="language-text">shadowsocks/shadowsocks-libev</code> 镜像 (<a href="https://hub.docker.com/r/shadowsocks/shadowsocks-libev">docker hub</a>)，直接上文件</p>\n<h4 id="docker-composeyml"><a href="#docker-composeyml" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>docker-compose.yml</h4>\n<div class="gatsby-highlight" data-language="yml">\n      <pre class="language-yml"><code class="language-yml">version: &#39;3&#39;\n\nservices:\n  ss:\n    image: shadowsocks/shadowsocks-libev\n    container_name: &#39;shadowsocks&#39;\n    ports:\n      - &#39;10825:8388&#39;\n      - &#39;10825:8388/udp&#39;\n    env_file:\n      - .env\n    restart: always</code></pre>\n      </div>\n<h4 id="makefile"><a href="#makefile" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Makefile</h4>\n<div class="gatsby-highlight" data-language="makefile">\n      <pre class="language-makefile"><code class="language-makefile">.PHONY: .ONESHELL\n\n.ONESHELL:\n\nSHELL=/bin/bash\n.DEFAULT_GOAL := start\n\n### common\n\nclean-image:\n\tdocker-compose down --rmi local\nprune:\n\tdocker image prune -f --filter until=240h\n\n### deploy\n\nclean-volume:\n\tdocker-compose down -v\n\nCMD=-h\n\ntest:\n\tdocker-compose ${CMD}\n\ndown:\n\tdocker-compose down\n\nbuild:\n\tdocker-compose build\n\nup:\n\tdocker-compose up -d\n\nup-%:\n\techo $${COMPOSE_FILE}\n\tdocker-compose up -d --no-dep $*\n\nstart: down build up</code></pre>\n      </div>\n<h4 id="env-file"><a href="#env-file" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>env file</h4>\n<div class="gatsby-highlight" data-language=".env">\n      <pre class="language-.env"><code class="language-.env"># 口令\nPASSWORD=\n\n# 加密方式\nMETHOD=</code></pre>\n      </div>\n<h3 id="kcptun"><a href="#kcptun" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>kcptun</h3>\n<p>kcptun 是一个双边加速的工具，可以将 TCP 服务的流量按照 kcp 协议的 UDP 流量发出，加速效果比较明显</p>\n<h4 id="服务端部署-1"><a href="#%E6%9C%8D%E5%8A%A1%E7%AB%AF%E9%83%A8%E7%BD%B2-1" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>服务端部署</h4>\n<p>直接上安装脚本</p>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash"><span class="token function">wget</span> --no-check-certificate https://github.com/kuoruan/shell-scripts/raw/master/kcptun/kcptun.sh\n\n<span class="token function">chmod</span> +x ./kcptun.sh\n\n./kcptun.sh</code></pre>\n      </div>\n<p>这里注意一些参数的配置如果不是很清楚含义就默认即可，但是由于 iOS 端用 <code class="language-text">shadowrocket</code> 暂不支持数据压缩所以选择参数的时候 <strong>关闭数据压缩</strong> 要选择 <code class="language-text">true</code></p>\n<h4 id="客户端使用"><a href="#%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BD%BF%E7%94%A8" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>客户端使用</h4>\n<ul>\n<li>\n<p>win/mac 在使用 <code class="language-text">shadowsocks-windows</code> 和 <code class="language-text">shadowsocks-NG-X</code> 的话设置区别不大，需要注意两点：</p>\n<ul>\n<li>端口填写成 <code class="language-text">kcptun</code> 的服务端口</li>\n<li>插件名 mac 直接写 <code class="language-text">kcptun</code>即可，windows 要下载相应的<a href="https://github.com/xtaci/kcptun/releases">客户端</a> 之后将插件 copy 到 shadowSocks 的同级目录下，插件名填写客户端文件名（不要后缀）即可；插件选项则需要根据服务端安装脚本完成后给出的字符串填写即可</li>\n</ul>\n</li>\n<li>\n<p><code class="language-text">shadowrocket</code> 中的配置比较简单（虽然研究了半天都不好），现版本（2.1.34）就已经支持插件的选项，其中就包括 <code class="language-text">kcptun</code>，设置的时候服务器配置部分按照正常地址和端口配置即可，插件项里的端口和地址不填则默认用填好的服务器配置，所以一般只需要改端口为 <code class="language-text">kcptun</code> 的端口就行，然后其他部分的配置按照服务器的配置即可（不能有出入）</p>\n</li>\n</ul>\n<h3 id="其他"><a href="#%E5%85%B6%E4%BB%96" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>其他</h3>\n<h4 id="bbr"><a href="#bbr" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>BBR</h4>\n<p>Linux 发行版内核在 4.9 之后支持 BBR(Google 提供的 TCP 拥塞控制算法)以加速 TCP 连接，一些新的发新版本会自动开启。如果没有开启则确认内核版本支持之后用以下脚本方便开启</p>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash"><span class="token function">wget</span> --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh\n\n<span class="token function">chmod</span> +x bbr.sh <span class="token operator">&amp;&amp;</span> ./bbr.sh</code></pre>\n      </div>\n<h4 id="fast_open"><a href="#fast_open" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>fast_open</h4>\n<p>也是一个 TCP 连接的拥塞控制算法，具体在第三次握手的时候可以传输数据，要求 Linux 内核高于 3.7 可以开启，具体如下</p>\n<ol>\n<li>编辑 <code class="language-text">/etc/sysctl.conf</code> 添加以下命令：</li>\n</ol>\n<div class="gatsby-highlight" data-language="conf">\n      <pre class="language-conf"><code class="language-conf">net.ipv4.tcp_fastopen = 3</code></pre>\n      </div>\n<ol start="2">\n<li>\n<p>执行 <code class="language-text">sysctl -p</code> 生效</p>\n</li>\n<li>\n<p>在 <code class="language-text">/etc/rc.local</code> 中添加以下命令以持久化 (没有的话直接创建就好)</p>\n</li>\n</ol>\n<div class="gatsby-highlight" data-language="bash">\n      <pre class="language-bash"><code class="language-bash"><span class="token keyword">echo</span> 3 <span class="token operator">></span> /proc/sys/net/ipv4/tcp_fastopen</code></pre>\n      </div>\n<h4 id="关于-code-classlanguage-textshadowsockscode-和-code-classlanguage-textshadowsocksrcode"><a href="#%E5%85%B3%E4%BA%8E-code-classlanguage-textshadowsockscode-%E5%92%8C-code-classlanguage-textshadowsocksrcode" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>关于 <code class="language-text">shadowsocks</code> 和 <code class="language-text">shadowsocksR</code></h4>\n<p>本质上讲 <code class="language-text">SS</code> 是原版, 而 <code class="language-text">SSR</code> 是<a href="https://github.com/breakwa11">破娃酱</a>的改版, 支持混淆和协议, 因此会用来做免流的伪装. 至于使用哪一个版本完全看个人喜好, 只不过需要下载相对应的客户端.</p>\n<p>具体的一些争议和趣闻参见<a href="https://www.itsvse.com/thread-4230-1-1.html">传送门 A</a> 和 <a href="https://www.hongweiit.com/ss-and-ssr.html">传送门 B</a> 及谷歌搜索</p>',excerpt:"前言 ShadowSocks 作为科学上网工具对于我来说基本是日常生活工作的必备，此篇作为基本科普和备忘大概记录下搭建和使用中的一些坑 客户端 Mac 端 Win 端 Android 端 iOS 端  （需要外区 Apple ID，虽然收 2…",timeToRead:3,fields:{slug:"/blog/2019-10-08--ShadowSocks的种种/"},frontmatter:{tags:["2019-10","shadowsocks","vpn"],author:{id:"SoraYama - 空山",bio:"折腾点前端和其他",twitter:"@ClassicSilence1",avatar:{children:[{__typename:"ImageSharp",responsiveResolution:{src:"/static/avatar-d7657fc7ec759cfa220ac058ed0b571a-0294e.jpg",srcSet:"/static/avatar-d7657fc7ec759cfa220ac058ed0b571a-0294e.jpg 1x,\n/static/avatar-d7657fc7ec759cfa220ac058ed0b571a-f0f16.jpg 1.5x,\n/static/avatar-d7657fc7ec759cfa220ac058ed0b571a-6c605.jpg 2x,\n/static/avatar-d7657fc7ec759cfa220ac058ed0b571a-031f1.jpg 3x"}}]}},title:"ShadowSocks的种种",updatedDate:"Oct 8, 2019",image:{children:[{__typename:"ImageSharp",responsiveResolution:{src:"/static/shadowsocks-1ce0d1cd7e1d0637a29faca7d03ee87a-8dd6e.jpg",srcSet:"/static/shadowsocks-1ce0d1cd7e1d0637a29faca7d03ee87a-8dd6e.jpg 1x"}}]}}},recents:{edges:[{node:{fields:{slug:"/blog/2019-10-16--使用阿里云OSS+Docker搭建Nextcloud/"},timeToRead:4,frontmatter:{title:"使用阿里云OSS+Docker搭建Nextcloud",updatedDate:"2019-10-16",image:{children:[{__typename:"ImageSharp",responsiveResolution:{src:"/static/nextcloud-1bb99f288b731ba8e714fc91933b88eb-1bfe5.jpg",srcSet:"/static/nextcloud-1bb99f288b731ba8e714fc91933b88eb-1bfe5.jpg 1x,\n/static/nextcloud-1bb99f288b731ba8e714fc91933b88eb-60440.jpg 1.5x,\n/static/nextcloud-1bb99f288b731ba8e714fc91933b88eb-168f5.jpg 2x"}}]},author:{avatar:{children:[{__typename:"ImageSharp",responsiveResolution:{src:"/static/avatar-d7657fc7ec759cfa220ac058ed0b571a-e9ed2.jpg",srcSet:"/static/avatar-d7657fc7ec759cfa220ac058ed0b571a-e9ed2.jpg 1x,\n/static/avatar-d7657fc7ec759cfa220ac058ed0b571a-f1b3b.jpg 1.5x,\n/static/avatar-d7657fc7ec759cfa220ac058ed0b571a-d2364.jpg 2x,\n/static/avatar-d7657fc7ec759cfa220ac058ed0b571a-6f7fc.jpg 3x"}}]}}}}},{node:{fields:{slug:"/blog/2018-07-29--misc/"},timeToRead:3,frontmatter:{title:"Misc",updatedDate:"2019-07-30",image:{children:[{__typename:"ImageSharp",responsiveResolution:{src:"/static/cup-of-coffee-laptop-office-macbook-89786-98bc53d2012296d56b37cad2ff328b5a-1bfe5.jpeg",srcSet:"/static/cup-of-coffee-laptop-office-macbook-89786-98bc53d2012296d56b37cad2ff328b5a-1bfe5.jpeg 1x,\n/static/cup-of-coffee-laptop-office-macbook-89786-98bc53d2012296d56b37cad2ff328b5a-60440.jpeg 1.5x,\n/static/cup-of-coffee-laptop-office-macbook-89786-98bc53d2012296d56b37cad2ff328b5a-168f5.jpeg 2x,\n/static/cup-of-coffee-laptop-office-macbook-89786-98bc53d2012296d56b37cad2ff328b5a-40495.jpeg 3x"}}]},author:{avatar:{children:[{__typename:"ImageSharp",responsiveResolution:{src:"/static/avatar-d7657fc7ec759cfa220ac058ed0b571a-e9ed2.jpg",srcSet:"/static/avatar-d7657fc7ec759cfa220ac058ed0b571a-e9ed2.jpg 1x,\n/static/avatar-d7657fc7ec759cfa220ac058ed0b571a-f1b3b.jpg 1.5x,\n/static/avatar-d7657fc7ec759cfa220ac058ed0b571a-d2364.jpg 2x,\n/static/avatar-d7657fc7ec759cfa220ac058ed0b571a-6f7fc.jpg 3x"}}]}}}}},{node:{fields:{slug:"/blog/2019-07-03--前端面试汇总/"},timeToRead:12,frontmatter:{title:"前端面试汇总(持续更新)",updatedDate:"2019-07-28",image:{children:[{__typename:"ImageSharp",responsiveResolution:{src:"/static/fe-509f7cfdd1a14bf357f75a03cde10624-1bfe5.jpg",srcSet:"/static/fe-509f7cfdd1a14bf357f75a03cde10624-1bfe5.jpg 1x,\n/static/fe-509f7cfdd1a14bf357f75a03cde10624-60440.jpg 1.5x,\n/static/fe-509f7cfdd1a14bf357f75a03cde10624-168f5.jpg 2x,\n/static/fe-509f7cfdd1a14bf357f75a03cde10624-40495.jpg 3x"}}]},author:{avatar:{children:[{__typename:"ImageSharp",responsiveResolution:{src:"/static/avatar-d7657fc7ec759cfa220ac058ed0b571a-e9ed2.jpg",srcSet:"/static/avatar-d7657fc7ec759cfa220ac058ed0b571a-e9ed2.jpg 1x,\n/static/avatar-d7657fc7ec759cfa220ac058ed0b571a-f1b3b.jpg 1.5x,\n/static/avatar-d7657fc7ec759cfa220ac058ed0b571a-d2364.jpg 2x,\n/static/avatar-d7657fc7ec759cfa220ac058ed0b571a-6f7fc.jpg 3x"}}]}}}}},{node:{fields:{slug:"/blog/2018-07-29--Gatsby-and-Travis/"},timeToRead:3,frontmatter:{title:"用 gatsby 和 travis-ci 自动化构建和部署 github-pages",updatedDate:"2018-07-29",image:{children:[{__typename:"ImageSharp",responsiveResolution:{src:"/static/gatsby-word-c44bca7fd6ad9ad38985ba07e1a3b252-1bfe5.jpeg",srcSet:"/static/gatsby-word-c44bca7fd6ad9ad38985ba07e1a3b252-1bfe5.jpeg 1x,\n/static/gatsby-word-c44bca7fd6ad9ad38985ba07e1a3b252-60440.jpeg 1.5x,\n/static/gatsby-word-c44bca7fd6ad9ad38985ba07e1a3b252-168f5.jpeg 2x,\n/static/gatsby-word-c44bca7fd6ad9ad38985ba07e1a3b252-40495.jpeg 3x"}}]},author:{avatar:{children:[{__typename:"ImageSharp",responsiveResolution:{src:"/static/avatar-d7657fc7ec759cfa220ac058ed0b571a-e9ed2.jpg",srcSet:"/static/avatar-d7657fc7ec759cfa220ac058ed0b571a-e9ed2.jpg 1x,\n/static/avatar-d7657fc7ec759cfa220ac058ed0b571a-f1b3b.jpg 1.5x,\n/static/avatar-d7657fc7ec759cfa220ac058ed0b571a-d2364.jpg 2x,\n/static/avatar-d7657fc7ec759cfa220ac058ed0b571a-6f7fc.jpg 3x"}}]}}}}}]}},pathContext:{slug:"/blog/2019-10-08--ShadowSocks的种种/"}}}});
//# sourceMappingURL=path---blog-2019-10-08-shadow-socks的种种-180b920039854ba28e6e.js.map